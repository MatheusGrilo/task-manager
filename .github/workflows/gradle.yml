name: PR Workflow with Multi-Microservices

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: db_user
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: db_tasks
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages for user
        uses: actions/cache@v3
        with:
          path: ~/user/.gradle/caches
          key: ${{ runner.os }}-gradle-user-${{ hashFiles('user/**/*.gradle*', 'user/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-user-

      - name: Build and Test User Service
        run: |
          chmod +x user/gradlew
          ./user/gradlew build
          ./user/gradlew test

      - name: Cache Gradle packages for tasks
        uses: actions/cache@v3
        with:
          path: ~/tasks/.gradle/caches
          key: ${{ runner.os }}-gradle-tasks-${{ hashFiles('tasks/**/*.gradle*', 'tasks/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-tasks-

      - name: Build and Test Tasks Service
        run: |
          chmod +x tasks/gradlew
          ./tasks/gradlew build
          ./tasks/gradlew test

      - name: Print MongoDB logs if failure occurs
        if: failure()
        run: docker logs $(docker ps -q --filter ancestor=mongo)

      - name: Print PostgreSQL logs if failure occurs
        if: failure()
        run: docker logs $(docker ps -q --filter ancestor=postgres)