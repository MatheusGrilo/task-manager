name: PR Workflow with Multi-Microservices

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, tasks]

    services:
      postgres:
        image: postgres:17-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: db_user
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: '8.0'
          mongodb-port: 27017

      - name: Set environment variables
        run: |
          echo "MONGO_INITDB_DATABASE=db_tasks" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_USERNAME=root" >> $GITHUB_ENV
          echo "MONGO_INITDB_ROOT_PASSWORD=password" >> $GITHUB_ENV

      - name: Cache Gradle packages for ${{ matrix.service }}
        uses: actions/cache@v3
        with:
          path: ~/${{ matrix.service }}/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ matrix.service }}-${{ hashFiles('${{ matrix.service }}/**/*.gradle*', '${{ matrix.service }}/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.service }}-

      - name: Build and Test ${{ matrix.service }} Service
        run: |
          chmod +x ${{ matrix.service }}/gradlew
          ./${{ matrix.service }}/gradlew build
          ./${{ matrix.service }}/gradlew test

      - name: Print MongoDB logs if failure occurs
        if: failure()
        run: docker logs $(docker ps -q --filter ancestor=mongo)

      - name: Print PostgreSQL logs if failure occurs
        if: failure()
        run: docker logs $(docker ps -q --filter ancestor=postgres)
